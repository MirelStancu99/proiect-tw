{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mirel\\\\Desktop\\\\Technologii-Web-Acordare_Feedback_Continuu_Cursuri-main\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Login from './components/Login';\nimport { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport ProfessorPage from './pages/ProfessorPage';\nimport StudentPage from './pages/StudentPage';\nimport jwt_decode from 'jwt-decode';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isProfessor, setIsProfessor] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      try {\n        const data = jwt_decode(token);\n        setIsLoggedIn(true);\n        setIsProfessor(data.userType == 2);\n      } catch (e) {\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n\n  const onSignIn = (enteredEmail, enteredPassword, fname, lname) => {\n    console.log(enteredEmail);\n    let usertype = 0;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@stud.ase.ro$/g)) usertype = 1;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@ie.ase.ro$/g)) usertype = 2;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@csie.ase.ro$/g)) usertype = 2;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@ase.ro$/g)) usertype = 2;\n    fetch('http://localhost:3001/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName: enteredEmail,\n        password: enteredPassword,\n        firstName: fname,\n        lastName: lname,\n        usertypeId: usertype\n      })\n    }).then(response => {\n      if (response.ok) {\n        toast.success('Utilizator inregistrat', {\n          position: \"top-right\",\n          autoClose: 1500,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } else {\n        throw new Error();\n      }\n    }).catch(e => toast.error(\"Date incorecte\", {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    }));\n  };\n\n  const onLogin = (enteredEmail, enteredPassword) => {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName: enteredEmail,\n        password: enteredPassword\n      })\n    }).then(response => {\n      if (response.ok) {\n        toast.success('Succes', {\n          position: \"top-right\",\n          autoClose: 1500,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n        return response.json();\n      } else {\n        throw new Error('Email sau parola gresite!');\n      }\n    }).then(data => {\n      if (data.message) {\n        if (enteredEmail.split('@')[1] === 'stud.ase.ro') {\n          setIsProfessor(false);\n        } else setIsProfessor(true);\n\n        localStorage.setItem('token', data.token);\n        setIsLoggedIn(true);\n      }\n    }).catch(e => toast.error(\"Email / parola gresita!\", {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    }));\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setIsProfessor(false);\n    toast.success('Delogare cu succes!', {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 28\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Navbar, {\n      onLogout: onLogout,\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }, this) : '', isLoggedIn === false ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: onLogin,\n      onSignIn: onSignIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 31\n    }, this) : '', ' ', isLoggedIn && isProfessor ? /*#__PURE__*/_jsxDEV(ProfessorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 36\n    }, this) : '', isLoggedIn && !isProfessor ? /*#__PURE__*/_jsxDEV(StudentPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L6hBKMkM5xKxoZQx3Tsrtvct2A0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mirel/Desktop/Technologii-Web-Acordare_Feedback_Continuu_Cursuri-main/client/src/App.js"],"names":["Login","useState","useEffect","Navbar","ProfessorPage","StudentPage","jwt_decode","ToastContainer","toast","App","isLoggedIn","setIsLoggedIn","isProfessor","setIsProfessor","token","localStorage","getItem","data","userType","e","removeItem","onSignIn","enteredEmail","enteredPassword","fname","lname","console","log","usertype","match","fetch","method","headers","body","JSON","stringify","userName","password","firstName","lastName","usertypeId","then","response","ok","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Error","catch","error","onLogin","json","message","split","setItem","onLogout"],"mappings":"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","sourcesContent":["import Login from './components/Login';\nimport { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport ProfessorPage from './pages/ProfessorPage';\nimport StudentPage from './pages/StudentPage';\nimport jwt_decode from 'jwt-decode';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isProfessor, setIsProfessor] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const data = jwt_decode(token);\n        setIsLoggedIn(true);\n        setIsProfessor(data.userType == 2);\n      } catch (e) {\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n\n  const onSignIn = (enteredEmail, enteredPassword, fname, lname) => {\n    console.log(enteredEmail)\n    let usertype = 0;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@stud.ase.ro$/g)) usertype = 1;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@ie.ase.ro$/g)) usertype = 2;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@csie.ase.ro$/g)) usertype = 2;\n    if (enteredEmail.match(/^[A-Za-z0-9._%+-]+@ase.ro$/g)) usertype = 2;\n    fetch('http://localhost:3001/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userName: enteredEmail,\n        password: enteredPassword,\n        firstName: fname,\n        lastName: lname,\n        usertypeId: usertype,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          toast.success('Utilizator inregistrat', {\n            position: \"top-right\",\n            autoClose: 1500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else {\n          throw new Error();\n        }\n      })\n      .catch((e) => toast.error(\"Date incorecte\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }));\n  };\n  const onLogin = (enteredEmail, enteredPassword) => {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userName: enteredEmail,\n        password: enteredPassword,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          toast.success('Succes', {\n            position: \"top-right\",\n            autoClose: 1500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          return response.json();\n        } else {\n          throw new Error('Email sau parola gresite!');\n        }\n      })\n      .then((data) => {\n        if (data.message) {\n          if (enteredEmail.split('@')[1] === 'stud.ase.ro') {\n            setIsProfessor(false);\n          } else setIsProfessor(true);\n          localStorage.setItem('token', data.token);\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((e) => toast.error(\"Email / parola gresita!\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }))\n  };\n  const onLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setIsProfessor(false);\n    toast.success('Delogare cu succes!', {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  return (\n    <div className='main'> <ToastContainer />\n      {isLoggedIn ? <Navbar onLogout={onLogout} isLoggedIn={isLoggedIn} /> : ''}\n      {isLoggedIn === false ? <Login onLogin={onLogin} onSignIn={onSignIn} /> : ''}{' '}\n      {isLoggedIn && isProfessor ? <ProfessorPage /> : ''}\n      {isLoggedIn && !isProfessor ? <StudentPage /> : ''}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}